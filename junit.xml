<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="71" failures="0" time="45.361">
  <testsuite name="button" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:15" time="14.605" tests="7">
    <testcase classname="button render &lt;Button/&gt; component" name="button render &lt;Button/&gt; component" time="0.063">
    </testcase>
    <testcase classname="button should find mccree-btn classnames" name="button should find mccree-btn classnames" time="0.1">
    </testcase>
    <testcase classname="button should find type classnames" name="button should find type classnames" time="0.097">
    </testcase>
    <testcase classname="button should find variant classnames" name="button should find variant classnames" time="0.037">
    </testcase>
    <testcase classname="button should can trigger click event" name="button should can trigger click event" time="0.012">
    </testcase>
    <testcase classname="button should can not trigger click event when button is disabled" name="button should can not trigger click event when button is disabled" time="0.006">
    </testcase>
    <testcase classname="button should can not trigger click event when button is loading" name="button should can not trigger click event when button is loading" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="array" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:15" time="15.005" tests="12">
    <testcase classname="array works for type" name="array works for type" time="0.009">
    </testcase>
    <testcase classname="array works for type and required" name="array works for type and required" time="0.003">
    </testcase>
    <testcase classname="array works for none required" name="array works for none required" time="0.001">
    </testcase>
    <testcase classname="array works for empty array" name="array works for empty array" time="0.002">
    </testcase>
    <testcase classname="array works for undefined array" name="array works for undefined array" time="0.001">
    </testcase>
    <testcase classname="array works for null array" name="array works for null array" time="0.001">
    </testcase>
    <testcase classname="array works for none empty" name="array works for none empty" time="0">
    </testcase>
    <testcase classname="array works for exactly array length err" name="array works for exactly array length err" time="0.002">
    </testcase>
    <testcase classname="array works for exactly array length" name="array works for exactly array length" time="0.001">
    </testcase>
    <testcase classname="array works for array length less than" name="array works for array length less than" time="0.001">
    </testcase>
    <testcase classname="array works for array length greater than" name="array works for array length greater than" time="0.001">
    </testcase>
    <testcase classname="array works for array length between range" name="array works for array length between range" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="required" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:15" time="14.972" tests="12">
    <testcase classname="required works for array required=true" name="required works for array required=true" time="0.008">
    </testcase>
    <testcase classname="required works for array required=true &amp; custom message" name="required works for array required=true &amp; custom message" time="0.001">
    </testcase>
    <testcase classname="required works for array required=false" name="required works for array required=false" time="0.001">
    </testcase>
    <testcase classname="required works for string required=true" name="required works for string required=true" time="0.001">
    </testcase>
    <testcase classname="required works for string required=true &amp; custom message" name="required works for string required=true &amp; custom message" time="0.002">
    </testcase>
    <testcase classname="required works for string required=false" name="required works for string required=false" time="0.001">
    </testcase>
    <testcase classname="required works for number required=true" name="required works for number required=true" time="0.001">
    </testcase>
    <testcase classname="required works for number required=false" name="required works for number required=false" time="0">
    </testcase>
    <testcase classname="required works for null required=true" name="required works for null required=true" time="0.001">
    </testcase>
    <testcase classname="required works for null required=false" name="required works for null required=false" time="0.001">
    </testcase>
    <testcase classname="required works for undefined required=true" name="required works for undefined required=true" time="0.001">
    </testcase>
    <testcase classname="required works for undefined required=false" name="required works for undefined required=false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="pattern" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:30" time="1.567" tests="7">
    <testcase classname="pattern works for non-required empty string" name="pattern works for non-required empty string" time="0.004">
    </testcase>
    <testcase classname="pattern work for non-required empty string with string regexp" name="pattern work for non-required empty string with string regexp" time="0.006">
    </testcase>
    <testcase classname="pattern works for required empty string" name="pattern works for required empty string" time="0.002">
    </testcase>
    <testcase classname="pattern works for non-required null" name="pattern works for non-required null" time="0.002">
    </testcase>
    <testcase classname="pattern works for non-required null" name="pattern works for non-required null" time="0.001">
    </testcase>
    <testcase classname="pattern works" name="pattern works" time="0.001">
    </testcase>
    <testcase classname="pattern works for RegExp with global flag" name="pattern works for RegExp with global flag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="string" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:31" time="1.383" tests="6">
    <testcase classname="string works for none require" name="string works for none require" time="0.002">
    </testcase>
    <testcase classname="string works for empty string" name="string works for empty string" time="0.002">
    </testcase>
    <testcase classname="string works for undefined string" name="string works for undefined string" time="0.001">
    </testcase>
    <testcase classname="string works for null string" name="string works for null string" time="0.002">
    </testcase>
    <testcase classname="string works for message" name="string works for message" time="0.002">
    </testcase>
    <testcase classname="string works for whitespace empty" name="string works for whitespace empty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="messages" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:32" time="0.916" tests="2">
    <testcase classname="messages can use options.messages" name="messages can use options.messages" time="0.003">
    </testcase>
    <testcase classname="messages message can be object" name="messages message can be object" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Divider" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:32" time="1.884" tests="6">
    <testcase classname="Divider should render correctly" name="Divider should render correctly" time="0.005">
    </testcase>
    <testcase classname="Divider should work with align" name="Divider should work with align" time="0.005">
    </testcase>
    <testcase classname="Divider should work with type" name="Divider should work with type" time="0.004">
    </testcase>
    <testcase classname="Divider should work with color" name="Divider should work with color" time="0.01">
    </testcase>
    <testcase classname="Divider should work with RGB HEX" name="Divider should work with RGB HEX" time="0.005">
    </testcase>
    <testcase classname="Divider should find mccree-divider classnames" name="Divider should find mccree-divider classnames" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="number" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:33" time="0.839" tests="4">
    <testcase classname="number works" name="number works" time="0.002">
    </testcase>
    <testcase classname="number works for no-requred" name="number works for no-requred" time="0.006">
    </testcase>
    <testcase classname="number works for no-required in case of empty string" name="number works for no-required in case of empty string" time="0.002">
    </testcase>
    <testcase classname="number works for required" name="number works for required" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Card" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:31" time="3.736" tests="6">
    <testcase classname="Card should render correctly" name="Card should render correctly" time="0.065">
    </testcase>
    <testcase classname="Card should render Card.Footer/Card.Actions/Card.Content correctly" name="Card should render Card.Footer/Card.Actions/Card.Content correctly" time="0.012">
    </testcase>
    <testcase classname="Card shoulid find mccree-card classnames" name="Card shoulid find mccree-card classnames" time="0.134">
    </testcase>
    <testcase classname="Card shoulid find mccree-card-hoverable classnames" name="Card shoulid find mccree-card-hoverable classnames" time="0.015">
    </testcase>
    <testcase classname="Card shoulid find mccree-card-shadow classnames" name="Card shoulid find mccree-card-shadow classnames" time="0.007">
    </testcase>
    <testcase classname="Card shoulid find mccree-card-outlined classnames" name="Card shoulid find mccree-card-outlined classnames" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Space" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:34" time="1.625" tests="3">
    <testcase classname="Space should render width empty children" name="Space should render width empty children" time="0.04">
    </testcase>
    <testcase classname="Space should render width customize size" name="Space should render width customize size" time="0.016">
    </testcase>
    <testcase classname="Space should render correct with children" name="Space should render correct with children" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="enum" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:34" time="0.879" tests="2">
    <testcase classname="enum value must be one of 1,2,3" name="enum value must be one of 1,2,3" time="0.002">
    </testcase>
    <testcase classname="enum value must be one of 1,2,3 err" name="enum value must be one of 1,2,3 err" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Grid" errors="0" failures="0" skipped="0" timestamp="2020-09-18T08:06:34" time="2.739" tests="4">
    <testcase classname="Grid should render Grid" name="Grid should render Grid" time="0.02">
    </testcase>
    <testcase classname="Grid should render Grid.Container" name="Grid should render Grid.Container" time="0.003">
    </testcase>
    <testcase classname="Grid should work correct when gutter is object" name="Grid should work correct when gutter is object" time="0.058">
    </testcase>
    <testcase classname="Grid should work currect when gutter is array" name="Grid should work currect when gutter is array" time="0.005">
    </testcase>
  </testsuite>
</testsuites>